using qstring_set = void (*)(QString* val, const char* utf8, int nbytes);

void set_qstring(QString* val, const char* utf8, int nbytes) {
    *val = QString::fromUtf8(utf8, nbytes);
}

using qbytearray_set = void (*)(QByteArray* val, const char* bytes, int nbytes);

void set_qbytearray(QByteArray* v, const char* bytes, int nbytes) {
    if (v->isNull() && nbytes == 0) {
        *v = QByteArray(bytes, nbytes);
    } else {
        v->truncate(0);
        v->append(bytes, nbytes);
    }
}

struct qmodelindex_t {
    int row;
    quintptr id;
};

inline QVariant cleanNullQVariant(const QVariant& v) {
    return (v.isNull()) ?QVariant() :v;
}
